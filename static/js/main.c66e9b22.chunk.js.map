{"version":3,"sources":["components/feedBack/FeedBack.js","components/statistics/Statistics.js","components/section/Section.js","components/notification/Notification.js","index.js"],"names":["Feedback","options","id","onClick","e","target","Statistics","good","neutral","bad","total","positivePercentage","Section","title","child","Notification","message","App","state","uppervalue","field","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","num","Math","floor","this","positiveFeedback","Component","ReactDOM","render","document","getElementById"],"mappings":"qNAuBiBA,EArBA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjB,OACA,oCACI,4BACAC,GAAI,OACJC,QAAS,SAACC,GAAOH,EAAQG,EAAEC,OAAOH,MAFlC,QAKA,4BACAA,GAAI,UACJC,QAAS,SAACC,GAAOH,EAAQG,EAAEC,OAAOH,MAFlC,WAKA,4BACAA,GAAI,MACJC,QAAS,SAACC,GAAOH,EAAQG,EAAEC,OAAOH,MAFlC,SCASI,MAbf,YAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAChD,OACE,oCACH,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OCEeC,MATf,YAAkC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACrB,OACI,oCACA,4BAAKD,GACJC,ICKMC,MARf,YAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,oCACA,2BAAIA,KCENC,E,4MAEJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTU,WAAa,SAACC,GACV,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAQE,EAAUF,GAAS,O,EAKpCG,mBAAqB,WACf,OAAS,EAAKL,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAG/De,gCAAkC,SAACd,GACjC,IAAIe,EAAM,EAEN,OADUA,EAAJ,IAAVf,EAAoB,EAAW,EAAKQ,MAAMX,KAAOG,EAAS,IAC/CgB,KAAKC,MAAMF,I,uDAKpB,IAAIf,EAAQkB,KAAKL,qBACbM,EAAmBD,KAAKJ,gCAAgCd,GAE5D,OACE,oCACN,kBAAC,EAAD,CAASG,MAAO,wBAAyBC,MACvC,kBAAC,EAAD,CACAb,QAAS2B,KAAKT,eAGd,kBAAC,EAAD,CAASN,MAAO,aAAcC,MAChB,IAAVJ,EACE,kBAAC,EAAD,CAAcM,QAAS,sBACvB,kBAAC,EAAD,CACJT,KAAMqB,KAAKV,MAAMX,KACjBC,QAASoB,KAAKV,MAAMV,QACpBC,IAAKmB,KAAKV,MAAMT,IAChBC,MAAOA,EACPC,mBAAoBkB,W,GA9CRC,aAsDlBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.c66e9b22.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Feedback = ({options}) => {\n  return (\n  <>\n      <button\n      id={'good'}\n      onClick={(e) => {options(e.target.id)}}\n       >Good</button>\n\n      <button\n      id={'neutral'}\n      onClick={(e) => {options(e.target.id)}}\n      >Neutral</button>\n\n      <button\n      id={'bad'}\n      onClick={(e) => {options(e.target.id)}}\n      >Bad</button>\n      </>\n      )}\n       \n\n  export default Feedback","import React from \"react\"\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage}) {\n return (\n   <>\n<p>Good: {good}</p>\n<p>Neutral: {neutral}</p>\n<p>Bad: {bad}</p>\n<p>Total: {total}</p>\n<p>Positive feedback: {positivePercentage}%</p>\n</>\n )\n}\n\n\nexport default Statistics ","import React from \"react\";\n\nfunction Section({title, child}) {\n    return (\n        <>\n        <h2>{title}</h2>\n        {child}\n        </>\n    )\n}\n\nexport default Section","import React from \"react\"\n\n\nfunction Notification({message}) {\n    return (\n        <>\n        <p>{message}</p>\n        </>\n    )\n}\n\nexport default Notification","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FeedbackOptions from \"./components/feedBack/FeedBack.js\"\nimport Statistics from \"./components/statistics/Statistics.js\"\nimport Section from \"./components/section/Section.js\"\nimport Notification from \"./components/notification/Notification.js\"\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    }\n\nuppervalue = (field) => { \n    this.setState(prevState => {\n      return {\n        [field]: prevState[field] + 1\n      }\n     })\n  }\n    \ncountTotalFeedback = () => {\n      return  (this.state.good + this.state.neutral + this.state.bad)\n      }\n        \n  countPositiveFeedbackPercentage = (total) => {\n    let num = 0\n    total === 0 ? num = 0 : num = (this.state.good / total) * 100\n        return Math.floor(num)\n      }\n\n\n    render () {\n      let total = this.countTotalFeedback()\n      let positiveFeedback = this.countPositiveFeedbackPercentage(total)\n      \n      return (\n        <>\n  <Section title={\"Please leave feedback\"} child={\n    <FeedbackOptions\n    options={this.uppervalue}\n    />\n  } />\n    <Section title={\"Statistics\"} child={\n        total === 0\n        ? <Notification message={\"No feedback given\"}/> \n        : <Statistics \n      good={this.state.good} \n      neutral={this.state.neutral} \n      bad={this.state.bad} \n      total={total} \n      positivePercentage={positiveFeedback}/> \n    }/>\n    </>\n      )\n    }\n}\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}