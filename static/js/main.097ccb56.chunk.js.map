{"version":3,"sources":["components/feedBack/FeedBack.js","components/statistics/Statistics.js","components/section/Section.js","components/notification/Notification.js","index.js"],"names":["Feedback","options","id","onClick","e","target","prototype","PropTypes","func","isRequired","Statistics","good","neutral","bad","total","positivePercentage","number","Section","title","child","element","string","Notification","message","App","state","uppervalue","field","setState","prevState","countTotalFeedback","array","item","push","reduce","acc","countPositiveFeedbackPercentage","num","Math","floor","this","positiveFeedback","Component","ReactDOM","render","document","getElementById"],"mappings":"qOAGMA,EAAW,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjB,OACA,oCACI,4BACAC,GAAI,OACJC,QAAS,SAACC,GAAOH,EAAQG,EAAEC,OAAOH,MAFlC,QAKA,4BACAA,GAAI,UACJC,QAAS,SAACC,GAAOH,EAAQG,EAAEC,OAAOH,MAFlC,WAKA,4BACAA,GAAI,MACJC,QAAS,SAACC,GAAOH,EAAQG,EAAEC,OAAOH,MAFlC,SAONF,EAASM,UAAY,CACnBL,QAASM,IAAUC,KAAKC,YAGTT,QCxBjB,SAASU,EAAT,GAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAChD,OACE,oCACH,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MAKAL,EAAWJ,UAAY,CACrBK,KAAMJ,IAAUS,OAAOP,WACvBG,QAASL,IAAUS,OAAOP,WAC1BI,IAAKN,IAAUS,OAAOP,WACtBM,mBAAoBR,IAAUS,OAAOP,WACrCK,MAAOP,IAAUS,OAAOP,YAGXC,QCpBf,SAASO,EAAT,GAAkC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACrB,OACI,oCACA,4BAAKD,GACJC,GAKTF,EAAQX,UAAY,CAChBa,MAAOZ,IAAUa,QAAQX,WACzBS,MAAOX,IAAUc,OAAOZ,YAIbQ,QCff,SAASK,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,oCACA,2BAAIA,IAKZD,EAAahB,UAAY,CACrBiB,QAAShB,IAAUc,OAAOZ,YAGfa,QCPTE,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAQE,EAAUF,GAAS,O,EAKlCG,mBAAqB,WACnB,IAAIC,EAAQ,GACZ,IAAK,IAAIC,KAAQ,EAAKP,MACpBM,EAAME,KAAK,EAAKR,MAAMO,IAGxB,OADYD,EAAMG,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,M,EAIhDI,gCAAkC,SAACtB,GACjC,IAAIuB,EAAM,EAEV,OADeA,EAAL,IAAVvB,EAAqB,EAAa,EAAKW,MAAMd,KAAOG,EAAS,IACtDwB,KAAKC,MAAMF,I,uDAIlB,IAAIvB,EAAQ0B,KAAKV,qBACbW,EAAmBD,KAAKJ,gCAAgCtB,GAE5D,OACE,oCACE,kBAAC,EAAD,CACEI,MAAO,wBACPC,MAAO,kBAAC,EAAD,CAAiBlB,QAASuC,KAAKd,eAExC,kBAAC,EAAD,CACER,MAAO,aACPC,MACY,IAAVL,EACE,kBAAC,EAAD,CAAcS,QAAS,sBAEvB,kBAAC,EAAD,CACEZ,KAAM6B,KAAKf,MAAMd,KACjBC,QAAS4B,KAAKf,MAAMb,QACpBC,IAAK2B,KAAKf,MAAMZ,IAChBC,MAAOA,EACPC,mBAAoB0B,W,GAnDlBC,aA8DlBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.097ccb56.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from 'prop-types'\n\nconst Feedback = ({options}) => {\n  return (\n  <>\n      <button\n      id={'good'}\n      onClick={(e) => {options(e.target.id)}}\n       >Good</button>\n\n      <button\n      id={'neutral'}\n      onClick={(e) => {options(e.target.id)}}\n      >Neutral</button>\n\n      <button\n      id={'bad'}\n      onClick={(e) => {options(e.target.id)}}\n      >Bad</button>\n      </>\n      )}\n       \nFeedback.prototype = {\n  options: PropTypes.func.isRequired,\n};\n\n  export default Feedback","import React from \"react\"\nimport PropTypes from 'prop-types'\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage}) {\n return (\n   <>\n<p>Good: {good}</p>\n<p>Neutral: {neutral}</p>\n<p>Bad: {bad}</p>\n<p>Total: {total}</p>\n<p>Positive feedback: {positivePercentage}%</p>\n</>\n )\n}\n\nStatistics.prototype = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default Statistics ","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nfunction Section({title, child}) {\n    return (\n        <>\n        <h2>{title}</h2>\n        {child}\n        </>\n    )\n}\n\nSection.prototype = {\n    child: PropTypes.element.isRequired,\n    title: PropTypes.string.isRequired\n}\n\n\nexport default Section","import React from \"react\"\nimport PropTypes from \"prop-types\";\n\nfunction Notification({message}) {\n    return (\n        <>\n        <p>{message}</p>\n        </>\n    )\n}\n\nNotification.prototype = {\n    message: PropTypes.string.isRequired\n}\n\nexport default Notification","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FeedbackOptions from \"./components/feedBack/FeedBack.js\"\nimport Statistics from \"./components/statistics/Statistics.js\"\nimport Section from \"./components/section/Section.js\"\nimport Notification from \"./components/notification/Notification.js\"\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  uppervalue = (field) => {\n    this.setState((prevState) => {\n      return {\n        [field]: prevState[field] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    let array = [];\n    for (let item in this.state) {\n      array.push(this.state[item]);\n    }\n    let total = array.reduce((acc, item) => acc + item);\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = (total) => {\n    let num = 0;\n    total === 0 ? (num = 0) : (num = (this.state.good / total) * 100);\n    return Math.floor(num);\n  };\n\n  render() {\n    let total = this.countTotalFeedback();\n    let positiveFeedback = this.countPositiveFeedbackPercentage(total);\n\n    return (\n      <>\n        <Section\n          title={\"Please leave feedback\"}\n          child={<FeedbackOptions options={this.uppervalue} />}\n        />\n        <Section\n          title={\"Statistics\"}\n          child={\n            total === 0 ? (\n              <Notification message={\"No feedback given\"} />\n            ) : (\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={total}\n                positivePercentage={positiveFeedback}\n              />\n            )\n          }\n        />\n      </>\n    );\n  }\n}\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}