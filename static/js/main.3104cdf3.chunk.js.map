{"version":3,"sources":["components/buttons.js","components/statistic.js","components/form.js","index.js"],"names":["Buttons","takeValue","getStatisticValue","className","id","onClick","e","Statistic","total","stanDev","Searchbar","state","inputValue","time","handleChange","value","target","setState","handleSubmit","preventDefault","fetchLink","props","Date","getTime","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","currentTime","Component","socket","WebSocket","App","array","currentValue","totalLink","fetch","then","response","json","data","console","log","getValueFromSocet","number","JSON","parse","addEventListener","length","mean","reduce","a","b","Math","sqrt","map","x","pow","trunc","ReactDOM","render","document","getElementById"],"mappings":"0MAqBeA,EAnBC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,kBAC1B,OACE,oCACE,4BAAQC,UAAU,SAClBC,GAAI,QAASC,QAAS,SAACC,GAAD,OAAOL,MAD7B,SAKA,4BACEE,UAAU,SACVC,GAAI,OACJC,QAAS,SAACC,GAAD,OAAOJ,MAHlB,eCGOK,EAXG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACxB,OACE,oCACE,4BACE,4BAAI,0EAAaD,IACjB,4BAAI,+JAA4BC,OCkD3BC,E,4MApDXC,MAAQ,CACJC,WAAY,GACZC,KAAM,G,EAGNC,aAAe,SAACR,GAAO,IACbS,EAAUT,EAAEU,OAAZD,MAER,EAAKE,SAAS,CACZL,WAAYG,K,EAIhBG,aAAe,SAAAZ,GACbA,EAAEa,iBADgB,IAGVC,EAAc,EAAKC,MAAnBD,UAEJP,GAAO,IAAIS,MAAOC,UACtBH,EAAU,EAAKT,MAAMC,WAAWC,GAEhC,EAAKI,SAAS,CACZL,WAAY,GACZC,KAAM,K,4CAIlB,WACI,OACE,4BAAQV,UAAU,aAChB,0BAAMA,UAAU,aAAaqB,SAAUC,KAAKP,cAC1C,4BAAQQ,KAAK,SAASvB,UAAU,UAC9B,0BAAMA,UAAU,2BAAhB,WAGF,2BACEA,UAAU,mBACVuB,KAAK,MACLC,aAAa,MACbC,WAAS,EACTC,YAAY,cACZd,MAAOU,KAAKd,MAAMC,WAClBkB,SAAUL,KAAKX,gBAIvB,6BAAK,oCAAUW,KAAKJ,MAAMU,YAArB,Y,GAhDeC,aCKlBC,G,MAAS,IAAIC,UAAU,iDAGvBC,E,4MACJxB,MAAQ,CACNyB,MAAO,GACP5B,MAAO,EACP6B,aAAc,EACdN,YAAa,G,EAIfX,UAAY,SAACkB,EAAWzB,GACtB0B,MAAMD,GACDE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZ,IACIZ,GADa,IAAIT,MAAOC,UACGV,EAC/B,EAAKI,SAAS,CAACc,YAAaA,Q,EAKpCe,kBAAoB,SAACxC,GACnB,IAAIyC,EAASC,KAAKC,MAAM3C,EAAEqC,MACxB,EAAK1B,SAAS,CAACmB,MAAM,GAAD,mBAAM,EAAKzB,MAAMyB,OAAjB,CAAwBW,EAAOhC,W,EAGvDd,UAAY,WACVgC,EAAOiB,iBAAiB,WAAW,SAAC5C,GAAO,EAAKwC,kBAAkBxC,O,EAGpEJ,kBAAoB,WAAO,IACjBkC,EAAU,EAAKzB,MAAfyB,MAGJe,EAASf,EAAMe,OAAS,EACxBC,EAAOhB,EAAMiB,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,KAAGJ,EAClC1C,EAAU+C,KAAKC,KAAKrB,EAAMsB,KAAI,SAAAC,GAAC,OAAIH,KAAKI,IAAID,EAAEP,EAAK,MAAIC,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,KAAGJ,GAE9E,EAAKlC,SAAS,CACZT,MAAOgD,KAAKK,MAAMT,GAClBf,aAAcmB,KAAKK,MAAMpD,M,4CAI/B,WAEE,OACE,oCACA,kBAAC,EAAD,CAASR,UAAWwB,KAAKxB,UAAWC,kBAAmBuB,KAAKvB,oBAC5D,kBAAC,EAAD,CAAWM,MAAOiB,KAAKd,MAAMH,MAAOC,QAASgB,KAAKd,MAAM0B,eACxD,kBAAC,EAAD,CAAUjB,UAAWK,KAAKL,UAAWW,YAAaN,KAAKd,MAAMoB,mB,GAlDjDC,aAyDlB8B,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.3104cdf3.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Buttons = ({ takeValue, getStatisticValue }) => {\n    return (\n      <>\n        <button className=\"button\" \n        id={\"start\"} onClick={(e) => takeValue()}>\n          Start\n        </button>\n\n        <button\n          className=\"button\"\n          id={\"stat\"}\n          onClick={(e) => getStatisticValue()}\n        >\n          Statistic\n        </button>\n      </>\n    );\n}\n\nexport default Buttons","import React from \"react\"\n\nconst Statistic = ({ total, stanDev }) => {\n    return (\n      <>\n        <ul>\n          <li><p>Среднее: {total}</p></li>\n          <li><p>Стандартное отклонение: {stanDev}</p></li>\n        </ul>\n      </>\n    );\n}\n\nexport default Statistic","import React, {Component} from 'react'\n\n\nclass Searchbar extends Component {\n\n    state = {\n        inputValue: '',\n        time: 0\n      }\n\n        handleChange = (e) => {\n          const { value } = e.target\n    \n          this.setState({\n            inputValue: value,\n          })\n        }\n    \n        handleSubmit = e => {\n          e.preventDefault()\n\n          const { fetchLink } = this.props\n\n          let time = new Date().getTime()\n          fetchLink(this.state.inputValue,time)\n\n          this.setState({ \n            inputValue: '',\n            time: 0\n          })\n        }\n\nrender() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"url\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search link\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n          />\n        </form>\n\n    <div><p>time: {this.props.currentTime}ms</p></div>\n      </header>\n    );\n}\n}\n\nexport default Searchbar","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Buttons from \"./components/buttons.js\"\nimport Statistic from './components/statistic.js'\nimport SerchBar from './components/form.js'\n\nimport './styles.css'\nconst socket = new WebSocket('wss://trade.trademux.net:8800/?password=1234');\n\n\nclass App extends Component {\n  state = {\n    array: [],\n    total: 0,\n    currentValue: 0,\n    currentTime: 0\n  };\n  \n\n  fetchLink = (totalLink, time) => {\n    fetch(totalLink)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data)\n          let secondTime = new Date().getTime()\n          let currentTime = secondTime - time\n          this.setState({currentTime: currentTime})\n        });\n\n  }\n\n  getValueFromSocet = (e) => {\n    let number = JSON.parse(e.data)\n      this.setState({array: [...this.state.array, number.value]})\n  }\n\n  takeValue = () => {\n    socket.addEventListener('message', (e) => {this.getValueFromSocet(e)});\n  }\n\n  getStatisticValue = () => {\n    const { array } = this.state\n\n\n    let length = array.length - 1\n    let mean = array.reduce((a,b) => a+b)/length\n    let stanDev = Math.sqrt(array.map(x => Math.pow(x-mean,2)).reduce((a,b) => a+b)/length);\n\n      this.setState({\n        total: Math.trunc(mean),\n        currentValue: Math.trunc(stanDev)\n      })\n  }\n\n  render() {\n\n    return (\n      <>\n      <Buttons takeValue={this.takeValue} getStatisticValue={this.getStatisticValue}></Buttons>\n      <Statistic total={this.state.total} stanDev={this.state.currentValue}></Statistic>\n      <SerchBar fetchLink={this.fetchLink} currentTime={this.state.currentTime}></SerchBar>\n      </>\n    );\n  }\n}\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}